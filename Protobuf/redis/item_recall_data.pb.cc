// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: redis/item_recall_data.proto

#include "redis/item_recall_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_redis_2fitem_5frecall_5fdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto;
namespace RSP_ItemRecallData {
class WeightInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WeightInfo> _instance;
} _WeightInfo_default_instance_;
class ItemRecallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ItemRecall> _instance;
} _ItemRecall_default_instance_;
}  // namespace RSP_ItemRecallData
static void InitDefaultsscc_info_ItemRecall_redis_2fitem_5frecall_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RSP_ItemRecallData::_ItemRecall_default_instance_;
    new (ptr) ::RSP_ItemRecallData::ItemRecall();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ItemRecall_redis_2fitem_5frecall_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ItemRecall_redis_2fitem_5frecall_5fdata_2eproto}, {
      &scc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto.base,}};

static void InitDefaultsscc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RSP_ItemRecallData::_WeightInfo_default_instance_;
    new (ptr) ::RSP_ItemRecallData::WeightInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_redis_2fitem_5frecall_5fdata_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_redis_2fitem_5frecall_5fdata_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_redis_2fitem_5frecall_5fdata_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_redis_2fitem_5frecall_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::WeightInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::WeightInfo, id_),
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::WeightInfo, res_type_),
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::WeightInfo, weight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::ItemRecall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::ItemRecall, timestamp_),
  PROTOBUF_FIELD_OFFSET(::RSP_ItemRecallData::ItemRecall, item_list_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::RSP_ItemRecallData::WeightInfo)},
  { 8, -1, sizeof(::RSP_ItemRecallData::ItemRecall)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RSP_ItemRecallData::_WeightInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RSP_ItemRecallData::_ItemRecall_default_instance_),
};

const char descriptor_table_protodef_redis_2fitem_5frecall_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034redis/item_recall_data.proto\022\022RSP_Item"
  "RecallData\":\n\nWeightInfo\022\n\n\002id\030\001 \001(\003\022\020\n\010"
  "res_type\030\002 \001(\005\022\016\n\006weight\030\003 \001(\002\"R\n\nItemRe"
  "call\022\021\n\ttimestamp\030\001 \001(\003\0221\n\titem_list\030\002 \003"
  "(\0132\036.RSP_ItemRecallData.WeightInfob\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_redis_2fitem_5frecall_5fdata_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_redis_2fitem_5frecall_5fdata_2eproto_sccs[2] = {
  &scc_info_ItemRecall_redis_2fitem_5frecall_5fdata_2eproto.base,
  &scc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_redis_2fitem_5frecall_5fdata_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_redis_2fitem_5frecall_5fdata_2eproto = {
  false, false, descriptor_table_protodef_redis_2fitem_5frecall_5fdata_2eproto, "redis/item_recall_data.proto", 202,
  &descriptor_table_redis_2fitem_5frecall_5fdata_2eproto_once, descriptor_table_redis_2fitem_5frecall_5fdata_2eproto_sccs, descriptor_table_redis_2fitem_5frecall_5fdata_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_redis_2fitem_5frecall_5fdata_2eproto::offsets,
  file_level_metadata_redis_2fitem_5frecall_5fdata_2eproto, 2, file_level_enum_descriptors_redis_2fitem_5frecall_5fdata_2eproto, file_level_service_descriptors_redis_2fitem_5frecall_5fdata_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_redis_2fitem_5frecall_5fdata_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_redis_2fitem_5frecall_5fdata_2eproto)), true);
namespace RSP_ItemRecallData {

// ===================================================================

class WeightInfo::_Internal {
 public:
};

WeightInfo::WeightInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RSP_ItemRecallData.WeightInfo)
}
WeightInfo::WeightInfo(const WeightInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&id_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:RSP_ItemRecallData.WeightInfo)
}

void WeightInfo::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&id_)) + sizeof(weight_));
}

WeightInfo::~WeightInfo() {
  // @@protoc_insertion_point(destructor:RSP_ItemRecallData.WeightInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WeightInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WeightInfo::ArenaDtor(void* object) {
  WeightInfo* _this = reinterpret_cast< WeightInfo* >(object);
  (void)_this;
}
void WeightInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WeightInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WeightInfo& WeightInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WeightInfo_redis_2fitem_5frecall_5fdata_2eproto.base);
  return *internal_default_instance();
}


void WeightInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RSP_ItemRecallData.WeightInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&id_)) + sizeof(weight_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WeightInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 res_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          res_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float weight = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WeightInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RSP_ItemRecallData.WeightInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // int32 res_type = 2;
  if (this->res_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_res_type(), target);
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RSP_ItemRecallData.WeightInfo)
  return target;
}

size_t WeightInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RSP_ItemRecallData.WeightInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int32 res_type = 2;
  if (this->res_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_res_type());
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WeightInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RSP_ItemRecallData.WeightInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WeightInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WeightInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RSP_ItemRecallData.WeightInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RSP_ItemRecallData.WeightInfo)
    MergeFrom(*source);
  }
}

void WeightInfo::MergeFrom(const WeightInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RSP_ItemRecallData.WeightInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.res_type() != 0) {
    _internal_set_res_type(from._internal_res_type());
  }
  if (!(from.weight() <= 0 && from.weight() >= 0)) {
    _internal_set_weight(from._internal_weight());
  }
}

void WeightInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RSP_ItemRecallData.WeightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeightInfo::CopyFrom(const WeightInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RSP_ItemRecallData.WeightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeightInfo::IsInitialized() const {
  return true;
}

void WeightInfo::InternalSwap(WeightInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WeightInfo, weight_)
      + sizeof(WeightInfo::weight_)
      - PROTOBUF_FIELD_OFFSET(WeightInfo, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WeightInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ItemRecall::_Internal {
 public:
};

ItemRecall::ItemRecall(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RSP_ItemRecallData.ItemRecall)
}
ItemRecall::ItemRecall(const ItemRecall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_list_(from.item_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:RSP_ItemRecallData.ItemRecall)
}

void ItemRecall::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ItemRecall_redis_2fitem_5frecall_5fdata_2eproto.base);
  timestamp_ = PROTOBUF_LONGLONG(0);
}

ItemRecall::~ItemRecall() {
  // @@protoc_insertion_point(destructor:RSP_ItemRecallData.ItemRecall)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ItemRecall::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ItemRecall::ArenaDtor(void* object) {
  ItemRecall* _this = reinterpret_cast< ItemRecall* >(object);
  (void)_this;
}
void ItemRecall::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ItemRecall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ItemRecall& ItemRecall::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ItemRecall_redis_2fitem_5frecall_5fdata_2eproto.base);
  return *internal_default_instance();
}


void ItemRecall::Clear() {
// @@protoc_insertion_point(message_clear_start:RSP_ItemRecallData.ItemRecall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemRecall::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .RSP_ItemRecallData.WeightInfo item_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ItemRecall::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RSP_ItemRecallData.ItemRecall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // repeated .RSP_ItemRecallData.WeightInfo item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_item_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RSP_ItemRecallData.ItemRecall)
  return target;
}

size_t ItemRecall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RSP_ItemRecallData.ItemRecall)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RSP_ItemRecallData.WeightInfo item_list = 2;
  total_size += 1UL * this->_internal_item_list_size();
  for (const auto& msg : this->item_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemRecall::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RSP_ItemRecallData.ItemRecall)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemRecall* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ItemRecall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RSP_ItemRecallData.ItemRecall)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RSP_ItemRecallData.ItemRecall)
    MergeFrom(*source);
  }
}

void ItemRecall::MergeFrom(const ItemRecall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RSP_ItemRecallData.ItemRecall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void ItemRecall::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RSP_ItemRecallData.ItemRecall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemRecall::CopyFrom(const ItemRecall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RSP_ItemRecallData.ItemRecall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemRecall::IsInitialized() const {
  return true;
}

void ItemRecall::InternalSwap(ItemRecall* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  item_list_.InternalSwap(&other->item_list_);
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemRecall::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace RSP_ItemRecallData
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::RSP_ItemRecallData::WeightInfo* Arena::CreateMaybeMessage< ::RSP_ItemRecallData::WeightInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RSP_ItemRecallData::WeightInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::RSP_ItemRecallData::ItemRecall* Arena::CreateMaybeMessage< ::RSP_ItemRecallData::ItemRecall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RSP_ItemRecallData::ItemRecall >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
