// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: redis/item_recall_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_redis_2fitem_5frecall_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_redis_2fitem_5frecall_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_redis_2fitem_5frecall_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_redis_2fitem_5frecall_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_redis_2fitem_5frecall_5fdata_2eproto;
namespace RSP_ItemRecallData {
class ItemRecall;
class ItemRecallDefaultTypeInternal;
extern ItemRecallDefaultTypeInternal _ItemRecall_default_instance_;
class WeightInfo;
class WeightInfoDefaultTypeInternal;
extern WeightInfoDefaultTypeInternal _WeightInfo_default_instance_;
}  // namespace RSP_ItemRecallData
PROTOBUF_NAMESPACE_OPEN
template<> ::RSP_ItemRecallData::ItemRecall* Arena::CreateMaybeMessage<::RSP_ItemRecallData::ItemRecall>(Arena*);
template<> ::RSP_ItemRecallData::WeightInfo* Arena::CreateMaybeMessage<::RSP_ItemRecallData::WeightInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace RSP_ItemRecallData {

// ===================================================================

class WeightInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RSP_ItemRecallData.WeightInfo) */ {
 public:
  inline WeightInfo() : WeightInfo(nullptr) {}
  virtual ~WeightInfo();

  WeightInfo(const WeightInfo& from);
  WeightInfo(WeightInfo&& from) noexcept
    : WeightInfo() {
    *this = ::std::move(from);
  }

  inline WeightInfo& operator=(const WeightInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline WeightInfo& operator=(WeightInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WeightInfo& default_instance();

  static inline const WeightInfo* internal_default_instance() {
    return reinterpret_cast<const WeightInfo*>(
               &_WeightInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WeightInfo& a, WeightInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(WeightInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WeightInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WeightInfo* New() const final {
    return CreateMaybeMessage<WeightInfo>(nullptr);
  }

  WeightInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WeightInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WeightInfo& from);
  void MergeFrom(const WeightInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WeightInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RSP_ItemRecallData.WeightInfo";
  }
  protected:
  explicit WeightInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_redis_2fitem_5frecall_5fdata_2eproto);
    return ::descriptor_table_redis_2fitem_5frecall_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kResTypeFieldNumber = 2,
    kWeightFieldNumber = 3,
  };
  // int64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 res_type = 2;
  void clear_res_type();
  ::PROTOBUF_NAMESPACE_ID::int32 res_type() const;
  void set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_type() const;
  void _internal_set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float weight = 3;
  void clear_weight();
  float weight() const;
  void set_weight(float value);
  private:
  float _internal_weight() const;
  void _internal_set_weight(float value);
  public:

  // @@protoc_insertion_point(class_scope:RSP_ItemRecallData.WeightInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_type_;
  float weight_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_redis_2fitem_5frecall_5fdata_2eproto;
};
// -------------------------------------------------------------------

class ItemRecall PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RSP_ItemRecallData.ItemRecall) */ {
 public:
  inline ItemRecall() : ItemRecall(nullptr) {}
  virtual ~ItemRecall();

  ItemRecall(const ItemRecall& from);
  ItemRecall(ItemRecall&& from) noexcept
    : ItemRecall() {
    *this = ::std::move(from);
  }

  inline ItemRecall& operator=(const ItemRecall& from) {
    CopyFrom(from);
    return *this;
  }
  inline ItemRecall& operator=(ItemRecall&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ItemRecall& default_instance();

  static inline const ItemRecall* internal_default_instance() {
    return reinterpret_cast<const ItemRecall*>(
               &_ItemRecall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ItemRecall& a, ItemRecall& b) {
    a.Swap(&b);
  }
  inline void Swap(ItemRecall* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ItemRecall* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ItemRecall* New() const final {
    return CreateMaybeMessage<ItemRecall>(nullptr);
  }

  ItemRecall* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ItemRecall>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ItemRecall& from);
  void MergeFrom(const ItemRecall& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ItemRecall* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RSP_ItemRecallData.ItemRecall";
  }
  protected:
  explicit ItemRecall(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_redis_2fitem_5frecall_5fdata_2eproto);
    return ::descriptor_table_redis_2fitem_5frecall_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemListFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // repeated .RSP_ItemRecallData.WeightInfo item_list = 2;
  int item_list_size() const;
  private:
  int _internal_item_list_size() const;
  public:
  void clear_item_list();
  ::RSP_ItemRecallData::WeightInfo* mutable_item_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RSP_ItemRecallData::WeightInfo >*
      mutable_item_list();
  private:
  const ::RSP_ItemRecallData::WeightInfo& _internal_item_list(int index) const;
  ::RSP_ItemRecallData::WeightInfo* _internal_add_item_list();
  public:
  const ::RSP_ItemRecallData::WeightInfo& item_list(int index) const;
  ::RSP_ItemRecallData::WeightInfo* add_item_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RSP_ItemRecallData::WeightInfo >&
      item_list() const;

  // int64 timestamp = 1;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:RSP_ItemRecallData.ItemRecall)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RSP_ItemRecallData::WeightInfo > item_list_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_redis_2fitem_5frecall_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WeightInfo

// int64 id = 1;
inline void WeightInfo::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WeightInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WeightInfo::id() const {
  // @@protoc_insertion_point(field_get:RSP_ItemRecallData.WeightInfo.id)
  return _internal_id();
}
inline void WeightInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  id_ = value;
}
inline void WeightInfo::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:RSP_ItemRecallData.WeightInfo.id)
}

// int32 res_type = 2;
inline void WeightInfo::clear_res_type() {
  res_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WeightInfo::_internal_res_type() const {
  return res_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WeightInfo::res_type() const {
  // @@protoc_insertion_point(field_get:RSP_ItemRecallData.WeightInfo.res_type)
  return _internal_res_type();
}
inline void WeightInfo::_internal_set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_type_ = value;
}
inline void WeightInfo::set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_type(value);
  // @@protoc_insertion_point(field_set:RSP_ItemRecallData.WeightInfo.res_type)
}

// float weight = 3;
inline void WeightInfo::clear_weight() {
  weight_ = 0;
}
inline float WeightInfo::_internal_weight() const {
  return weight_;
}
inline float WeightInfo::weight() const {
  // @@protoc_insertion_point(field_get:RSP_ItemRecallData.WeightInfo.weight)
  return _internal_weight();
}
inline void WeightInfo::_internal_set_weight(float value) {
  
  weight_ = value;
}
inline void WeightInfo::set_weight(float value) {
  _internal_set_weight(value);
  // @@protoc_insertion_point(field_set:RSP_ItemRecallData.WeightInfo.weight)
}

// -------------------------------------------------------------------

// ItemRecall

// int64 timestamp = 1;
inline void ItemRecall::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ItemRecall::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ItemRecall::timestamp() const {
  // @@protoc_insertion_point(field_get:RSP_ItemRecallData.ItemRecall.timestamp)
  return _internal_timestamp();
}
inline void ItemRecall::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  timestamp_ = value;
}
inline void ItemRecall::set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:RSP_ItemRecallData.ItemRecall.timestamp)
}

// repeated .RSP_ItemRecallData.WeightInfo item_list = 2;
inline int ItemRecall::_internal_item_list_size() const {
  return item_list_.size();
}
inline int ItemRecall::item_list_size() const {
  return _internal_item_list_size();
}
inline void ItemRecall::clear_item_list() {
  item_list_.Clear();
}
inline ::RSP_ItemRecallData::WeightInfo* ItemRecall::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:RSP_ItemRecallData.ItemRecall.item_list)
  return item_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RSP_ItemRecallData::WeightInfo >*
ItemRecall::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:RSP_ItemRecallData.ItemRecall.item_list)
  return &item_list_;
}
inline const ::RSP_ItemRecallData::WeightInfo& ItemRecall::_internal_item_list(int index) const {
  return item_list_.Get(index);
}
inline const ::RSP_ItemRecallData::WeightInfo& ItemRecall::item_list(int index) const {
  // @@protoc_insertion_point(field_get:RSP_ItemRecallData.ItemRecall.item_list)
  return _internal_item_list(index);
}
inline ::RSP_ItemRecallData::WeightInfo* ItemRecall::_internal_add_item_list() {
  return item_list_.Add();
}
inline ::RSP_ItemRecallData::WeightInfo* ItemRecall::add_item_list() {
  // @@protoc_insertion_point(field_add:RSP_ItemRecallData.ItemRecall.item_list)
  return _internal_add_item_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RSP_ItemRecallData::WeightInfo >&
ItemRecall::item_list() const {
  // @@protoc_insertion_point(field_list:RSP_ItemRecallData.ItemRecall.item_list)
  return item_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RSP_ItemRecallData

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_redis_2fitem_5frecall_5fdata_2eproto
