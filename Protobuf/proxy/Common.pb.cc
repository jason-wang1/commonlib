// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/Common.proto

#include "proxy/Common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proxy_2fCommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RelyInfo_proxy_2fCommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_2fCommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServiceInfo_proxy_2fCommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_2fCommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WatchServiceInfo_proxy_2fCommon_2eproto;
namespace GrpcProtos {
class UnifiedRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnifiedRequest> _instance;
} _UnifiedRequest_default_instance_;
class UnifiedResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnifiedResponse> _instance;
} _UnifiedResponse_default_instance_;
class RelyInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RelyInfo> _instance;
} _RelyInfo_default_instance_;
class ServiceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServiceInfo> _instance;
} _ServiceInfo_default_instance_;
class WatchServiceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WatchServiceInfo> _instance;
} _WatchServiceInfo_default_instance_;
class RegisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterRequest> _instance;
} _RegisterRequest_default_instance_;
class RegisterReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterReply> _instance;
} _RegisterReply_default_instance_;
class OnlineRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnlineRequest> _instance;
} _OnlineRequest_default_instance_;
class OnlineReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnlineReply> _instance;
} _OnlineReply_default_instance_;
class OfflineRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OfflineRequest> _instance;
} _OfflineRequest_default_instance_;
class PingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PingRequest> _instance;
} _PingRequest_default_instance_;
class CheckRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckRequest> _instance;
} _CheckRequest_default_instance_;
class CheckReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckReply> _instance;
} _CheckReply_default_instance_;
class ReloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReloadRequest> _instance;
} _ReloadRequest_default_instance_;
class NotifyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotifyRequest> _instance;
} _NotifyRequest_default_instance_;
class EmptyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
}  // namespace GrpcProtos
static void InitDefaultsscc_info_CheckReply_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_CheckReply_default_instance_;
    new (ptr) ::GrpcProtos::CheckReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CheckReply_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CheckReply_proxy_2fCommon_2eproto}, {
      &scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_CheckRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_CheckRequest_default_instance_;
    new (ptr) ::GrpcProtos::CheckRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CheckRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CheckRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,
      &scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_EmptyResponse_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_EmptyResponse_default_instance_;
    new (ptr) ::GrpcProtos::EmptyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmptyResponse_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmptyResponse_proxy_2fCommon_2eproto}, {}};

static void InitDefaultsscc_info_NotifyRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_NotifyRequest_default_instance_;
    new (ptr) ::GrpcProtos::NotifyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotifyRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_NotifyRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_OfflineRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_OfflineRequest_default_instance_;
    new (ptr) ::GrpcProtos::OfflineRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OfflineRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OfflineRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_OnlineReply_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_OnlineReply_default_instance_;
    new (ptr) ::GrpcProtos::OnlineReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OnlineReply_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OnlineReply_proxy_2fCommon_2eproto}, {
      &scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_OnlineRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_OnlineRequest_default_instance_;
    new (ptr) ::GrpcProtos::OnlineRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OnlineRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OnlineRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_PingRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_PingRequest_default_instance_;
    new (ptr) ::GrpcProtos::PingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PingRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PingRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_RegisterReply_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_RegisterReply_default_instance_;
    new (ptr) ::GrpcProtos::RegisterReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterReply_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterReply_proxy_2fCommon_2eproto}, {
      &scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_RegisterRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_RegisterRequest_default_instance_;
    new (ptr) ::GrpcProtos::RegisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_ReloadRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_ReloadRequest_default_instance_;
    new (ptr) ::GrpcProtos::ReloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReloadRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReloadRequest_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_RelyInfo_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_RelyInfo_default_instance_;
    new (ptr) ::GrpcProtos::RelyInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RelyInfo_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RelyInfo_proxy_2fCommon_2eproto}, {}};

static void InitDefaultsscc_info_ServiceInfo_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_ServiceInfo_default_instance_;
    new (ptr) ::GrpcProtos::ServiceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServiceInfo_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ServiceInfo_proxy_2fCommon_2eproto}, {
      &scc_info_RelyInfo_proxy_2fCommon_2eproto.base,}};

static void InitDefaultsscc_info_UnifiedRequest_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_UnifiedRequest_default_instance_;
    new (ptr) ::GrpcProtos::UnifiedRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnifiedRequest_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnifiedRequest_proxy_2fCommon_2eproto}, {}};

static void InitDefaultsscc_info_UnifiedResponse_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_UnifiedResponse_default_instance_;
    new (ptr) ::GrpcProtos::UnifiedResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnifiedResponse_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnifiedResponse_proxy_2fCommon_2eproto}, {}};

static void InitDefaultsscc_info_WatchServiceInfo_proxy_2fCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GrpcProtos::_WatchServiceInfo_default_instance_;
    new (ptr) ::GrpcProtos::WatchServiceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WatchServiceInfo_proxy_2fCommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WatchServiceInfo_proxy_2fCommon_2eproto}, {
      &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proxy_2fCommon_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proxy_2fCommon_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proxy_2fCommon_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proxy_2fCommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedRequest, cmd_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedRequest, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedResponse, cmd_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedResponse, result_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::UnifiedResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RelyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RelyInfo, rely_service_type_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RelyInfo, rely_semver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, service_type_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, semver_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, addr_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, host_name_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, status_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, rely_list_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, service_weight_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, connect_mode_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, group_tab_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, service_name_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ServiceInfo, nickname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::WatchServiceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::WatchServiceInfo, service_type_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::WatchServiceInfo, service_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RegisterRequest, service_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RegisterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::RegisterReply, watch_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::OnlineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::OnlineRequest, service_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::OnlineReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::OnlineReply, watch_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::OfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::OfflineRequest, service_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::PingRequest, service_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::CheckRequest, service_info_),
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::CheckRequest, watch_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::CheckReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::CheckReply, watch_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ReloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::ReloadRequest, service_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::NotifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::NotifyRequest, service_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GrpcProtos::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GrpcProtos::UnifiedRequest)},
  { 7, -1, sizeof(::GrpcProtos::UnifiedResponse)},
  { 15, -1, sizeof(::GrpcProtos::RelyInfo)},
  { 22, -1, sizeof(::GrpcProtos::ServiceInfo)},
  { 38, -1, sizeof(::GrpcProtos::WatchServiceInfo)},
  { 45, -1, sizeof(::GrpcProtos::RegisterRequest)},
  { 51, -1, sizeof(::GrpcProtos::RegisterReply)},
  { 57, -1, sizeof(::GrpcProtos::OnlineRequest)},
  { 63, -1, sizeof(::GrpcProtos::OnlineReply)},
  { 69, -1, sizeof(::GrpcProtos::OfflineRequest)},
  { 75, -1, sizeof(::GrpcProtos::PingRequest)},
  { 81, -1, sizeof(::GrpcProtos::CheckRequest)},
  { 88, -1, sizeof(::GrpcProtos::CheckReply)},
  { 94, -1, sizeof(::GrpcProtos::ReloadRequest)},
  { 100, -1, sizeof(::GrpcProtos::NotifyRequest)},
  { 106, -1, sizeof(::GrpcProtos::EmptyResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_UnifiedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_UnifiedResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_RelyInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_ServiceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_WatchServiceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_RegisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_RegisterReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_OnlineRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_OnlineReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_OfflineRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_PingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_CheckRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_CheckReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_ReloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_NotifyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GrpcProtos::_EmptyResponse_default_instance_),
};

const char descriptor_table_protodef_proxy_2fCommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022proxy/Common.proto\022\nGrpcProtos\".\n\016Unif"
  "iedRequest\022\013\n\003cmd\030\001 \001(\005\022\017\n\007request\030\002 \001(\014"
  "\"@\n\017UnifiedResponse\022\013\n\003cmd\030\001 \001(\005\022\016\n\006resu"
  "lt\030\002 \001(\005\022\020\n\010response\030\003 \001(\014\":\n\010RelyInfo\022\031"
  "\n\021rely_service_type\030\001 \001(\005\022\023\n\013rely_semver"
  "\030\002 \001(\t\"\366\001\n\013ServiceInfo\022\024\n\014service_type\030\001"
  " \001(\005\022\016\n\006semver\030\002 \001(\t\022\014\n\004addr\030\003 \001(\t\022\021\n\tho"
  "st_name\030\004 \001(\t\022\016\n\006status\030\005 \001(\005\022\'\n\trely_li"
  "st\030\006 \003(\0132\024.GrpcProtos.RelyInfo\022\026\n\016servic"
  "e_weight\030\007 \001(\005\022\024\n\014connect_mode\030\010 \001(\005\022\021\n\t"
  "group_tab\030\t \001(\t\022\024\n\014service_name\030\n \001(\t\022\020\n"
  "\010nickname\030\013 \001(\t\"W\n\020WatchServiceInfo\022\024\n\014s"
  "ervice_type\030\001 \001(\005\022-\n\014service_list\030\002 \003(\0132"
  "\027.GrpcProtos.ServiceInfo\"@\n\017RegisterRequ"
  "est\022-\n\014service_info\030\001 \001(\0132\027.GrpcProtos.S"
  "erviceInfo\"A\n\rRegisterReply\0220\n\nwatch_lis"
  "t\030\001 \003(\0132\034.GrpcProtos.WatchServiceInfo\">\n"
  "\rOnlineRequest\022-\n\014service_info\030\001 \001(\0132\027.G"
  "rpcProtos.ServiceInfo\"\?\n\013OnlineReply\0220\n\n"
  "watch_list\030\001 \003(\0132\034.GrpcProtos.WatchServi"
  "ceInfo\"\?\n\016OfflineRequest\022-\n\014service_info"
  "\030\001 \001(\0132\027.GrpcProtos.ServiceInfo\"<\n\013PingR"
  "equest\022-\n\014service_info\030\001 \001(\0132\027.GrpcProto"
  "s.ServiceInfo\"o\n\014CheckRequest\022-\n\014service"
  "_info\030\001 \001(\0132\027.GrpcProtos.ServiceInfo\0220\n\n"
  "watch_list\030\002 \003(\0132\034.GrpcProtos.WatchServi"
  "ceInfo\">\n\nCheckReply\0220\n\nwatch_list\030\001 \003(\013"
  "2\034.GrpcProtos.WatchServiceInfo\">\n\rReload"
  "Request\022-\n\014service_info\030\001 \001(\0132\027.GrpcProt"
  "os.ServiceInfo\">\n\rNotifyRequest\022-\n\014servi"
  "ce_info\030\001 \001(\0132\027.GrpcProtos.ServiceInfo\"\017"
  "\n\rEmptyResponse*p\n\013ServiceType\022\025\n\021SERVIC"
  "E_TYPE_NONE\020\000\022\024\n\017REGISTER_CENTER\020\360.\022\032\n\025S"
  "ERVICE_ALGO_GATE_WAY\020\370F\022\030\n\023SERVICE_ALGO_"
  "CENTER\020\202G*\270\001\n\007CmdType\022\014\n\010CMD_NONE\020\000\022\020\n\014C"
  "MD_REGISTER\020\n\022\016\n\nCMD_ONLINE\020\024\022\017\n\013CMD_OFF"
  "LINE\020\036\022\014\n\010CMD_PING\020(\022\r\n\tCMD_CHECK\0202\022\016\n\nC"
  "MD_RELOAD\020<\022\016\n\nCMD_NOTIFY\020F\022\r\n\tCMD_HELLO"
  "\020d\022 \n\032CMD_GET_DOWNLOAD_RECOMMEND\020\341\2657*\234\002\n"
  "\nResultType\022\006\n\002OK\020\000\022\017\n\013ERR_Unknown\020\001\022\023\n\017"
  "ERR_Service_CMD\020\002\022\021\n\rERR_NO_Server\020\003\022\026\n\022"
  "ERR_Decode_Request\020\004\022\027\n\023ERR_Encode_Respo"
  "nse\020\005\022\024\n\020ERR_Call_Service\020\006\022\027\n\023ERR_Decod"
  "e_Response\020\007\022\026\n\022ERR_Encode_Request\020\010\022\023\n\017"
  "ERR_Service_Cal\020\t\022\027\n\023ERR_Service_Timeout"
  "\020\n\022\023\n\017ERR_Grpc_Closed\020\013\022\022\n\016ERR_Rate_Limi"
  "t\020\014*C\n\rServiceStatus\022\013\n\007Unknown\020\000\022\014\n\010Reg"
  "ister\020\001\022\n\n\006Online\020\002\022\013\n\007Offline\020\003*\027\n\013Conn"
  "ectMode\022\010\n\004GRPC\020\0002Z\n\016UnifiedService\022H\n\013C"
  "allService\022\032.GrpcProtos.UnifiedRequest\032\033"
  ".GrpcProtos.UnifiedResponse\"\000B\022Z\020./;Gate"
  "WayProtosb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proxy_2fCommon_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proxy_2fCommon_2eproto_sccs[16] = {
  &scc_info_CheckReply_proxy_2fCommon_2eproto.base,
  &scc_info_CheckRequest_proxy_2fCommon_2eproto.base,
  &scc_info_EmptyResponse_proxy_2fCommon_2eproto.base,
  &scc_info_NotifyRequest_proxy_2fCommon_2eproto.base,
  &scc_info_OfflineRequest_proxy_2fCommon_2eproto.base,
  &scc_info_OnlineReply_proxy_2fCommon_2eproto.base,
  &scc_info_OnlineRequest_proxy_2fCommon_2eproto.base,
  &scc_info_PingRequest_proxy_2fCommon_2eproto.base,
  &scc_info_RegisterReply_proxy_2fCommon_2eproto.base,
  &scc_info_RegisterRequest_proxy_2fCommon_2eproto.base,
  &scc_info_ReloadRequest_proxy_2fCommon_2eproto.base,
  &scc_info_RelyInfo_proxy_2fCommon_2eproto.base,
  &scc_info_ServiceInfo_proxy_2fCommon_2eproto.base,
  &scc_info_UnifiedRequest_proxy_2fCommon_2eproto.base,
  &scc_info_UnifiedResponse_proxy_2fCommon_2eproto.base,
  &scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proxy_2fCommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proxy_2fCommon_2eproto = {
  false, false, descriptor_table_protodef_proxy_2fCommon_2eproto, "proxy/Common.proto", 2057,
  &descriptor_table_proxy_2fCommon_2eproto_once, descriptor_table_proxy_2fCommon_2eproto_sccs, descriptor_table_proxy_2fCommon_2eproto_deps, 16, 0,
  schemas, file_default_instances, TableStruct_proxy_2fCommon_2eproto::offsets,
  file_level_metadata_proxy_2fCommon_2eproto, 16, file_level_enum_descriptors_proxy_2fCommon_2eproto, file_level_service_descriptors_proxy_2fCommon_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proxy_2fCommon_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proxy_2fCommon_2eproto)), true);
namespace GrpcProtos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServiceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2fCommon_2eproto);
  return file_level_enum_descriptors_proxy_2fCommon_2eproto[0];
}
bool ServiceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 6000:
    case 9080:
    case 9090:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CmdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2fCommon_2eproto);
  return file_level_enum_descriptors_proxy_2fCommon_2eproto[1];
}
bool CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 20:
    case 30:
    case 40:
    case 50:
    case 60:
    case 70:
    case 100:
    case 908001:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResultType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2fCommon_2eproto);
  return file_level_enum_descriptors_proxy_2fCommon_2eproto[2];
}
bool ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServiceStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2fCommon_2eproto);
  return file_level_enum_descriptors_proxy_2fCommon_2eproto[3];
}
bool ServiceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConnectMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proxy_2fCommon_2eproto);
  return file_level_enum_descriptors_proxy_2fCommon_2eproto[4];
}
bool ConnectMode_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class UnifiedRequest::_Internal {
 public:
};

UnifiedRequest::UnifiedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.UnifiedRequest)
}
UnifiedRequest::UnifiedRequest(const UnifiedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_request().empty()) {
    request_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_request(), 
      GetArena());
  }
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.UnifiedRequest)
}

void UnifiedRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnifiedRequest_proxy_2fCommon_2eproto.base);
  request_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cmd_ = 0;
}

UnifiedRequest::~UnifiedRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.UnifiedRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnifiedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  request_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnifiedRequest::ArenaDtor(void* object) {
  UnifiedRequest* _this = reinterpret_cast< UnifiedRequest* >(object);
  (void)_this;
}
void UnifiedRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnifiedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnifiedRequest& UnifiedRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnifiedRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void UnifiedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.UnifiedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_.ClearToEmpty();
  cmd_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnifiedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cmd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_request();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnifiedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.UnifiedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cmd = 1;
  if (this->cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cmd(), target);
  }

  // bytes request = 2;
  if (this->request().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.UnifiedRequest)
  return target;
}

size_t UnifiedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.UnifiedRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes request = 2;
  if (this->request().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_request());
  }

  // int32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cmd());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnifiedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.UnifiedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnifiedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnifiedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.UnifiedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.UnifiedRequest)
    MergeFrom(*source);
  }
}

void UnifiedRequest::MergeFrom(const UnifiedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.UnifiedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request().size() > 0) {
    _internal_set_request(from._internal_request());
  }
  if (from.cmd() != 0) {
    _internal_set_cmd(from._internal_cmd());
  }
}

void UnifiedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.UnifiedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnifiedRequest::CopyFrom(const UnifiedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.UnifiedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnifiedRequest::IsInitialized() const {
  return true;
}

void UnifiedRequest::InternalSwap(UnifiedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  request_.Swap(&other->request_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(cmd_, other->cmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnifiedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnifiedResponse::_Internal {
 public:
};

UnifiedResponse::UnifiedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.UnifiedResponse)
}
UnifiedResponse::UnifiedResponse(const UnifiedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  response_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_response().empty()) {
    response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_response(), 
      GetArena());
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.UnifiedResponse)
}

void UnifiedResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnifiedResponse_proxy_2fCommon_2eproto.base);
  response_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(result_));
}

UnifiedResponse::~UnifiedResponse() {
  // @@protoc_insertion_point(destructor:GrpcProtos.UnifiedResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnifiedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  response_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnifiedResponse::ArenaDtor(void* object) {
  UnifiedResponse* _this = reinterpret_cast< UnifiedResponse* >(object);
  (void)_this;
}
void UnifiedResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnifiedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnifiedResponse& UnifiedResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnifiedResponse_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void UnifiedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.UnifiedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.ClearToEmpty();
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(result_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnifiedResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cmd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_response();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnifiedResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.UnifiedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cmd = 1;
  if (this->cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cmd(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result(), target);
  }

  // bytes response = 3;
  if (this->response().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.UnifiedResponse)
  return target;
}

size_t UnifiedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.UnifiedResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes response = 3;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_response());
  }

  // int32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cmd());
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnifiedResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.UnifiedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnifiedResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnifiedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.UnifiedResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.UnifiedResponse)
    MergeFrom(*source);
  }
}

void UnifiedResponse::MergeFrom(const UnifiedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.UnifiedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.response().size() > 0) {
    _internal_set_response(from._internal_response());
  }
  if (from.cmd() != 0) {
    _internal_set_cmd(from._internal_cmd());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void UnifiedResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.UnifiedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnifiedResponse::CopyFrom(const UnifiedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.UnifiedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnifiedResponse::IsInitialized() const {
  return true;
}

void UnifiedResponse::InternalSwap(UnifiedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  response_.Swap(&other->response_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnifiedResponse, result_)
      + sizeof(UnifiedResponse::result_)
      - PROTOBUF_FIELD_OFFSET(UnifiedResponse, cmd_)>(
          reinterpret_cast<char*>(&cmd_),
          reinterpret_cast<char*>(&other->cmd_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnifiedResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RelyInfo::_Internal {
 public:
};

RelyInfo::RelyInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.RelyInfo)
}
RelyInfo::RelyInfo(const RelyInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rely_semver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rely_semver().empty()) {
    rely_semver_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rely_semver(), 
      GetArena());
  }
  rely_service_type_ = from.rely_service_type_;
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.RelyInfo)
}

void RelyInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RelyInfo_proxy_2fCommon_2eproto.base);
  rely_semver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rely_service_type_ = 0;
}

RelyInfo::~RelyInfo() {
  // @@protoc_insertion_point(destructor:GrpcProtos.RelyInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RelyInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rely_semver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RelyInfo::ArenaDtor(void* object) {
  RelyInfo* _this = reinterpret_cast< RelyInfo* >(object);
  (void)_this;
}
void RelyInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RelyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RelyInfo& RelyInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RelyInfo_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void RelyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.RelyInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rely_semver_.ClearToEmpty();
  rely_service_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelyInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rely_service_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rely_service_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rely_semver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rely_semver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.RelyInfo.rely_semver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RelyInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.RelyInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rely_service_type = 1;
  if (this->rely_service_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_rely_service_type(), target);
  }

  // string rely_semver = 2;
  if (this->rely_semver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rely_semver().data(), static_cast<int>(this->_internal_rely_semver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.RelyInfo.rely_semver");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rely_semver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.RelyInfo)
  return target;
}

size_t RelyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.RelyInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rely_semver = 2;
  if (this->rely_semver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rely_semver());
  }

  // int32 rely_service_type = 1;
  if (this->rely_service_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rely_service_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelyInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.RelyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RelyInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RelyInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.RelyInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.RelyInfo)
    MergeFrom(*source);
  }
}

void RelyInfo::MergeFrom(const RelyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.RelyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rely_semver().size() > 0) {
    _internal_set_rely_semver(from._internal_rely_semver());
  }
  if (from.rely_service_type() != 0) {
    _internal_set_rely_service_type(from._internal_rely_service_type());
  }
}

void RelyInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.RelyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelyInfo::CopyFrom(const RelyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.RelyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelyInfo::IsInitialized() const {
  return true;
}

void RelyInfo::InternalSwap(RelyInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rely_semver_.Swap(&other->rely_semver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(rely_service_type_, other->rely_service_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RelyInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServiceInfo::_Internal {
 public:
};

ServiceInfo::ServiceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rely_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.ServiceInfo)
}
ServiceInfo::ServiceInfo(const ServiceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rely_list_(from.rely_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  semver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_semver().empty()) {
    semver_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_semver(), 
      GetArena());
  }
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_addr().empty()) {
    addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_addr(), 
      GetArena());
  }
  host_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host_name().empty()) {
    host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_host_name(), 
      GetArena());
  }
  group_tab_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group_tab().empty()) {
    group_tab_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group_tab(), 
      GetArena());
  }
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_service_name(), 
      GetArena());
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArena());
  }
  ::memcpy(&service_type_, &from.service_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&connect_mode_) -
    reinterpret_cast<char*>(&service_type_)) + sizeof(connect_mode_));
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.ServiceInfo)
}

void ServiceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServiceInfo_proxy_2fCommon_2eproto.base);
  semver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_tab_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&service_type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&connect_mode_) -
      reinterpret_cast<char*>(&service_type_)) + sizeof(connect_mode_));
}

ServiceInfo::~ServiceInfo() {
  // @@protoc_insertion_point(destructor:GrpcProtos.ServiceInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServiceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  semver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_tab_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ServiceInfo::ArenaDtor(void* object) {
  ServiceInfo* _this = reinterpret_cast< ServiceInfo* >(object);
  (void)_this;
}
void ServiceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceInfo& ServiceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServiceInfo_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void ServiceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.ServiceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rely_list_.Clear();
  semver_.ClearToEmpty();
  addr_.ClearToEmpty();
  host_name_.ClearToEmpty();
  group_tab_.ClearToEmpty();
  service_name_.ClearToEmpty();
  nickname_.ClearToEmpty();
  ::memset(&service_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connect_mode_) -
      reinterpret_cast<char*>(&service_type_)) + sizeof(connect_mode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 service_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          service_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string semver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_semver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.ServiceInfo.semver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string addr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.ServiceInfo.addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_host_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.ServiceInfo.host_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .GrpcProtos.RelyInfo rely_list = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rely_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 service_weight = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          service_weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 connect_mode = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          connect_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string group_tab = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_group_tab();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.ServiceInfo.group_tab"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string service_name = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_service_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.ServiceInfo.service_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nickname = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GrpcProtos.ServiceInfo.nickname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServiceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.ServiceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 service_type = 1;
  if (this->service_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_service_type(), target);
  }

  // string semver = 2;
  if (this->semver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_semver().data(), static_cast<int>(this->_internal_semver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.ServiceInfo.semver");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_semver(), target);
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.ServiceInfo.addr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_addr(), target);
  }

  // string host_name = 4;
  if (this->host_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_name().data(), static_cast<int>(this->_internal_host_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.ServiceInfo.host_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_host_name(), target);
  }

  // int32 status = 5;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_status(), target);
  }

  // repeated .GrpcProtos.RelyInfo rely_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rely_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_rely_list(i), target, stream);
  }

  // int32 service_weight = 7;
  if (this->service_weight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_service_weight(), target);
  }

  // int32 connect_mode = 8;
  if (this->connect_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_connect_mode(), target);
  }

  // string group_tab = 9;
  if (this->group_tab().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_tab().data(), static_cast<int>(this->_internal_group_tab().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.ServiceInfo.group_tab");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_group_tab(), target);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.ServiceInfo.service_name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_service_name(), target);
  }

  // string nickname = 11;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcProtos.ServiceInfo.nickname");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.ServiceInfo)
  return target;
}

size_t ServiceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.ServiceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcProtos.RelyInfo rely_list = 6;
  total_size += 1UL * this->_internal_rely_list_size();
  for (const auto& msg : this->rely_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string semver = 2;
  if (this->semver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_semver());
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  // string host_name = 4;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_name());
  }

  // string group_tab = 9;
  if (this->group_tab().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_tab());
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string nickname = 11;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // int32 service_type = 1;
  if (this->service_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_service_type());
  }

  // int32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  // int32 service_weight = 7;
  if (this->service_weight() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_service_weight());
  }

  // int32 connect_mode = 8;
  if (this->connect_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_connect_mode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.ServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServiceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.ServiceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.ServiceInfo)
    MergeFrom(*source);
  }
}

void ServiceInfo::MergeFrom(const ServiceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.ServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rely_list_.MergeFrom(from.rely_list_);
  if (from.semver().size() > 0) {
    _internal_set_semver(from._internal_semver());
  }
  if (from.addr().size() > 0) {
    _internal_set_addr(from._internal_addr());
  }
  if (from.host_name().size() > 0) {
    _internal_set_host_name(from._internal_host_name());
  }
  if (from.group_tab().size() > 0) {
    _internal_set_group_tab(from._internal_group_tab());
  }
  if (from.service_name().size() > 0) {
    _internal_set_service_name(from._internal_service_name());
  }
  if (from.nickname().size() > 0) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (from.service_type() != 0) {
    _internal_set_service_type(from._internal_service_type());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.service_weight() != 0) {
    _internal_set_service_weight(from._internal_service_weight());
  }
  if (from.connect_mode() != 0) {
    _internal_set_connect_mode(from._internal_connect_mode());
  }
}

void ServiceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.ServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceInfo::CopyFrom(const ServiceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.ServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceInfo::IsInitialized() const {
  return true;
}

void ServiceInfo::InternalSwap(ServiceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rely_list_.InternalSwap(&other->rely_list_);
  semver_.Swap(&other->semver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  addr_.Swap(&other->addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_name_.Swap(&other->host_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_tab_.Swap(&other->group_tab_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceInfo, connect_mode_)
      + sizeof(ServiceInfo::connect_mode_)
      - PROTOBUF_FIELD_OFFSET(ServiceInfo, service_type_)>(
          reinterpret_cast<char*>(&service_type_),
          reinterpret_cast<char*>(&other->service_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WatchServiceInfo::_Internal {
 public:
};

WatchServiceInfo::WatchServiceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  service_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.WatchServiceInfo)
}
WatchServiceInfo::WatchServiceInfo(const WatchServiceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      service_list_(from.service_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_type_ = from.service_type_;
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.WatchServiceInfo)
}

void WatchServiceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base);
  service_type_ = 0;
}

WatchServiceInfo::~WatchServiceInfo() {
  // @@protoc_insertion_point(destructor:GrpcProtos.WatchServiceInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WatchServiceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WatchServiceInfo::ArenaDtor(void* object) {
  WatchServiceInfo* _this = reinterpret_cast< WatchServiceInfo* >(object);
  (void)_this;
}
void WatchServiceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchServiceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WatchServiceInfo& WatchServiceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WatchServiceInfo_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void WatchServiceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.WatchServiceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_list_.Clear();
  service_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchServiceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 service_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          service_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .GrpcProtos.ServiceInfo service_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WatchServiceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.WatchServiceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 service_type = 1;
  if (this->service_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_service_type(), target);
  }

  // repeated .GrpcProtos.ServiceInfo service_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_service_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_service_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.WatchServiceInfo)
  return target;
}

size_t WatchServiceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.WatchServiceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcProtos.ServiceInfo service_list = 2;
  total_size += 1UL * this->_internal_service_list_size();
  for (const auto& msg : this->service_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 service_type = 1;
  if (this->service_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_service_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchServiceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.WatchServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchServiceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WatchServiceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.WatchServiceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.WatchServiceInfo)
    MergeFrom(*source);
  }
}

void WatchServiceInfo::MergeFrom(const WatchServiceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.WatchServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_list_.MergeFrom(from.service_list_);
  if (from.service_type() != 0) {
    _internal_set_service_type(from._internal_service_type());
  }
}

void WatchServiceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.WatchServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchServiceInfo::CopyFrom(const WatchServiceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.WatchServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchServiceInfo::IsInitialized() const {
  return true;
}

void WatchServiceInfo::InternalSwap(WatchServiceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_list_.InternalSwap(&other->service_list_);
  swap(service_type_, other->service_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchServiceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RegisterRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const RegisterRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
RegisterRequest::_Internal::service_info(const RegisterRequest* msg) {
  return *msg->service_info_;
}
RegisterRequest::RegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.RegisterRequest)
}
RegisterRequest::RegisterRequest(const RegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.RegisterRequest)
}

void RegisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.RegisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void RegisterRequest::ArenaDtor(void* object) {
  RegisterRequest* _this = reinterpret_cast< RegisterRequest* >(object);
  (void)_this;
}
void RegisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterRequest& RegisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.RegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.RegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.RegisterRequest)
  return target;
}

size_t RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.RegisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.RegisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.RegisterRequest)
    MergeFrom(*source);
  }
}

void RegisterRequest::MergeFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void RegisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRequest::IsInitialized() const {
  return true;
}

void RegisterRequest::InternalSwap(RegisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RegisterReply::_Internal {
 public:
};

RegisterReply::RegisterReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  watch_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.RegisterReply)
}
RegisterReply::RegisterReply(const RegisterReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      watch_list_(from.watch_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.RegisterReply)
}

void RegisterReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterReply_proxy_2fCommon_2eproto.base);
}

RegisterReply::~RegisterReply() {
  // @@protoc_insertion_point(destructor:GrpcProtos.RegisterReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RegisterReply::ArenaDtor(void* object) {
  RegisterReply* _this = reinterpret_cast< RegisterReply* >(object);
  (void)_this;
}
void RegisterReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterReply& RegisterReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterReply_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void RegisterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.RegisterReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watch_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_watch_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.RegisterReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_watch_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_watch_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.RegisterReply)
  return target;
}

size_t RegisterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.RegisterReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
  total_size += 1UL * this->_internal_watch_list_size();
  for (const auto& msg : this->watch_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.RegisterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.RegisterReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.RegisterReply)
    MergeFrom(*source);
  }
}

void RegisterReply::MergeFrom(const RegisterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.RegisterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  watch_list_.MergeFrom(from.watch_list_);
}

void RegisterReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.RegisterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterReply::CopyFrom(const RegisterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.RegisterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterReply::IsInitialized() const {
  return true;
}

void RegisterReply::InternalSwap(RegisterReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  watch_list_.InternalSwap(&other->watch_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OnlineRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const OnlineRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
OnlineRequest::_Internal::service_info(const OnlineRequest* msg) {
  return *msg->service_info_;
}
OnlineRequest::OnlineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.OnlineRequest)
}
OnlineRequest::OnlineRequest(const OnlineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.OnlineRequest)
}

void OnlineRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnlineRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

OnlineRequest::~OnlineRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.OnlineRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnlineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void OnlineRequest::ArenaDtor(void* object) {
  OnlineRequest* _this = reinterpret_cast< OnlineRequest* >(object);
  (void)_this;
}
void OnlineRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnlineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnlineRequest& OnlineRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnlineRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void OnlineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.OnlineRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnlineRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnlineRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.OnlineRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.OnlineRequest)
  return target;
}

size_t OnlineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.OnlineRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlineRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.OnlineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnlineRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.OnlineRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.OnlineRequest)
    MergeFrom(*source);
  }
}

void OnlineRequest::MergeFrom(const OnlineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.OnlineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void OnlineRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.OnlineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineRequest::CopyFrom(const OnlineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.OnlineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineRequest::IsInitialized() const {
  return true;
}

void OnlineRequest::InternalSwap(OnlineRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnlineRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OnlineReply::_Internal {
 public:
};

OnlineReply::OnlineReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  watch_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.OnlineReply)
}
OnlineReply::OnlineReply(const OnlineReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      watch_list_(from.watch_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.OnlineReply)
}

void OnlineReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnlineReply_proxy_2fCommon_2eproto.base);
}

OnlineReply::~OnlineReply() {
  // @@protoc_insertion_point(destructor:GrpcProtos.OnlineReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnlineReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OnlineReply::ArenaDtor(void* object) {
  OnlineReply* _this = reinterpret_cast< OnlineReply* >(object);
  (void)_this;
}
void OnlineReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnlineReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnlineReply& OnlineReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnlineReply_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void OnlineReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.OnlineReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watch_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnlineReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_watch_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnlineReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.OnlineReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_watch_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_watch_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.OnlineReply)
  return target;
}

size_t OnlineReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.OnlineReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
  total_size += 1UL * this->_internal_watch_list_size();
  for (const auto& msg : this->watch_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlineReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.OnlineReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnlineReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.OnlineReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.OnlineReply)
    MergeFrom(*source);
  }
}

void OnlineReply::MergeFrom(const OnlineReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.OnlineReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  watch_list_.MergeFrom(from.watch_list_);
}

void OnlineReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.OnlineReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineReply::CopyFrom(const OnlineReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.OnlineReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineReply::IsInitialized() const {
  return true;
}

void OnlineReply::InternalSwap(OnlineReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  watch_list_.InternalSwap(&other->watch_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnlineReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OfflineRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const OfflineRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
OfflineRequest::_Internal::service_info(const OfflineRequest* msg) {
  return *msg->service_info_;
}
OfflineRequest::OfflineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.OfflineRequest)
}
OfflineRequest::OfflineRequest(const OfflineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.OfflineRequest)
}

void OfflineRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OfflineRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

OfflineRequest::~OfflineRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.OfflineRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OfflineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void OfflineRequest::ArenaDtor(void* object) {
  OfflineRequest* _this = reinterpret_cast< OfflineRequest* >(object);
  (void)_this;
}
void OfflineRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OfflineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfflineRequest& OfflineRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OfflineRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void OfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.OfflineRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfflineRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OfflineRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.OfflineRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.OfflineRequest)
  return target;
}

size_t OfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.OfflineRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.OfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OfflineRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.OfflineRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.OfflineRequest)
    MergeFrom(*source);
  }
}

void OfflineRequest::MergeFrom(const OfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.OfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void OfflineRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.OfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineRequest::CopyFrom(const OfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.OfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineRequest::IsInitialized() const {
  return true;
}

void OfflineRequest::InternalSwap(OfflineRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OfflineRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PingRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const PingRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
PingRequest::_Internal::service_info(const PingRequest* msg) {
  return *msg->service_info_;
}
PingRequest::PingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.PingRequest)
}

void PingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PingRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.PingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void PingRequest::ArenaDtor(void* object) {
  PingRequest* _this = reinterpret_cast< PingRequest* >(object);
  (void)_this;
}
void PingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PingRequest& PingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PingRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.PingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.PingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void PingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const CheckRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
CheckRequest::_Internal::service_info(const CheckRequest* msg) {
  return *msg->service_info_;
}
CheckRequest::CheckRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  watch_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      watch_list_(from.watch_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.CheckRequest)
}

void CheckRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.CheckRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void CheckRequest::ArenaDtor(void* object) {
  CheckRequest* _this = reinterpret_cast< CheckRequest* >(object);
  (void)_this;
}
void CheckRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckRequest& CheckRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.CheckRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watch_list_.Clear();
  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .GrpcProtos.WatchServiceInfo watch_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_watch_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.CheckRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_watch_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_watch_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.CheckRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 2;
  total_size += 1UL * this->_internal_watch_list_size();
  for (const auto& msg : this->watch_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.CheckRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.CheckRequest)
    MergeFrom(*source);
  }
}

void CheckRequest::MergeFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  watch_list_.MergeFrom(from.watch_list_);
  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void CheckRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  watch_list_.InternalSwap(&other->watch_list_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckReply::_Internal {
 public:
};

CheckReply::CheckReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  watch_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.CheckReply)
}
CheckReply::CheckReply(const CheckReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      watch_list_(from.watch_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.CheckReply)
}

void CheckReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckReply_proxy_2fCommon_2eproto.base);
}

CheckReply::~CheckReply() {
  // @@protoc_insertion_point(destructor:GrpcProtos.CheckReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CheckReply::ArenaDtor(void* object) {
  CheckReply* _this = reinterpret_cast< CheckReply* >(object);
  (void)_this;
}
void CheckReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckReply& CheckReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckReply_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void CheckReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.CheckReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watch_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_watch_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.CheckReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_watch_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_watch_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.CheckReply)
  return target;
}

size_t CheckReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.CheckReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcProtos.WatchServiceInfo watch_list = 1;
  total_size += 1UL * this->_internal_watch_list_size();
  for (const auto& msg : this->watch_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.CheckReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.CheckReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.CheckReply)
    MergeFrom(*source);
  }
}

void CheckReply::MergeFrom(const CheckReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.CheckReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  watch_list_.MergeFrom(from.watch_list_);
}

void CheckReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.CheckReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckReply::CopyFrom(const CheckReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.CheckReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckReply::IsInitialized() const {
  return true;
}

void CheckReply::InternalSwap(CheckReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  watch_list_.InternalSwap(&other->watch_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReloadRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const ReloadRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
ReloadRequest::_Internal::service_info(const ReloadRequest* msg) {
  return *msg->service_info_;
}
ReloadRequest::ReloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.ReloadRequest)
}
ReloadRequest::ReloadRequest(const ReloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.ReloadRequest)
}

void ReloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReloadRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

ReloadRequest::~ReloadRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.ReloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void ReloadRequest::ArenaDtor(void* object) {
  ReloadRequest* _this = reinterpret_cast< ReloadRequest* >(object);
  (void)_this;
}
void ReloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReloadRequest& ReloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReloadRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void ReloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.ReloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.ReloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.ReloadRequest)
  return target;
}

size_t ReloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.ReloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.ReloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.ReloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.ReloadRequest)
    MergeFrom(*source);
  }
}

void ReloadRequest::MergeFrom(const ReloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.ReloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void ReloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.ReloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadRequest::CopyFrom(const ReloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.ReloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadRequest::IsInitialized() const {
  return true;
}

void ReloadRequest::InternalSwap(ReloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class NotifyRequest::_Internal {
 public:
  static const ::GrpcProtos::ServiceInfo& service_info(const NotifyRequest* msg);
};

const ::GrpcProtos::ServiceInfo&
NotifyRequest::_Internal::service_info(const NotifyRequest* msg) {
  return *msg->service_info_;
}
NotifyRequest::NotifyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.NotifyRequest)
}
NotifyRequest::NotifyRequest(const NotifyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_info()) {
    service_info_ = new ::GrpcProtos::ServiceInfo(*from.service_info_);
  } else {
    service_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.NotifyRequest)
}

void NotifyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotifyRequest_proxy_2fCommon_2eproto.base);
  service_info_ = nullptr;
}

NotifyRequest::~NotifyRequest() {
  // @@protoc_insertion_point(destructor:GrpcProtos.NotifyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NotifyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete service_info_;
}

void NotifyRequest::ArenaDtor(void* object) {
  NotifyRequest* _this = reinterpret_cast< NotifyRequest* >(object);
  (void)_this;
}
void NotifyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotifyRequest& NotifyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotifyRequest_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void NotifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.NotifyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && service_info_ != nullptr) {
    delete service_info_;
  }
  service_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcProtos.ServiceInfo service_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NotifyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.NotifyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::service_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.NotifyRequest)
  return target;
}

size_t NotifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.NotifyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .GrpcProtos.ServiceInfo service_info = 1;
  if (this->has_service_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.NotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotifyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.NotifyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.NotifyRequest)
    MergeFrom(*source);
  }
}

void NotifyRequest::MergeFrom(const NotifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.NotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_info()) {
    _internal_mutable_service_info()->::GrpcProtos::ServiceInfo::MergeFrom(from._internal_service_info());
  }
}

void NotifyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.NotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRequest::CopyFrom(const NotifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.NotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRequest::IsInitialized() const {
  return true;
}

void NotifyRequest::InternalSwap(NotifyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(service_info_, other->service_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmptyResponse::_Internal {
 public:
};

EmptyResponse::EmptyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcProtos.EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GrpcProtos.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:GrpcProtos.EmptyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmptyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EmptyResponse::ArenaDtor(void* object) {
  EmptyResponse* _this = reinterpret_cast< EmptyResponse* >(object);
  (void)_this;
}
void EmptyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmptyResponse_proxy_2fCommon_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcProtos.EmptyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmptyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmptyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcProtos.EmptyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcProtos.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcProtos.EmptyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GrpcProtos.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GrpcProtos.EmptyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GrpcProtos.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcProtos.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GrpcProtos.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcProtos.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmptyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GrpcProtos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::GrpcProtos::UnifiedRequest* Arena::CreateMaybeMessage< ::GrpcProtos::UnifiedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::UnifiedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::UnifiedResponse* Arena::CreateMaybeMessage< ::GrpcProtos::UnifiedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::UnifiedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::RelyInfo* Arena::CreateMaybeMessage< ::GrpcProtos::RelyInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::RelyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::ServiceInfo* Arena::CreateMaybeMessage< ::GrpcProtos::ServiceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::ServiceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::WatchServiceInfo* Arena::CreateMaybeMessage< ::GrpcProtos::WatchServiceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::WatchServiceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::RegisterRequest* Arena::CreateMaybeMessage< ::GrpcProtos::RegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::RegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::RegisterReply* Arena::CreateMaybeMessage< ::GrpcProtos::RegisterReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::RegisterReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::OnlineRequest* Arena::CreateMaybeMessage< ::GrpcProtos::OnlineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::OnlineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::OnlineReply* Arena::CreateMaybeMessage< ::GrpcProtos::OnlineReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::OnlineReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::OfflineRequest* Arena::CreateMaybeMessage< ::GrpcProtos::OfflineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::OfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::PingRequest* Arena::CreateMaybeMessage< ::GrpcProtos::PingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::PingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::CheckRequest* Arena::CreateMaybeMessage< ::GrpcProtos::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::CheckRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::CheckReply* Arena::CreateMaybeMessage< ::GrpcProtos::CheckReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::CheckReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::ReloadRequest* Arena::CreateMaybeMessage< ::GrpcProtos::ReloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::ReloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::NotifyRequest* Arena::CreateMaybeMessage< ::GrpcProtos::NotifyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::NotifyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcProtos::EmptyResponse* Arena::CreateMaybeMessage< ::GrpcProtos::EmptyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GrpcProtos::EmptyResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
