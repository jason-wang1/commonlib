// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: other/annoy_file_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_other_2fannoy_5ffile_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_other_2fannoy_5ffile_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_other_2fannoy_5ffile_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_other_2fannoy_5ffile_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_other_2fannoy_5ffile_5fdata_2eproto;
namespace RSP_AnnoyFileData {
class AnnoyItemVector;
class AnnoyItemVectorDefaultTypeInternal;
extern AnnoyItemVectorDefaultTypeInternal _AnnoyItemVector_default_instance_;
class AnnoyKeynameVector;
class AnnoyKeynameVectorDefaultTypeInternal;
extern AnnoyKeynameVectorDefaultTypeInternal _AnnoyKeynameVector_default_instance_;
}  // namespace RSP_AnnoyFileData
PROTOBUF_NAMESPACE_OPEN
template<> ::RSP_AnnoyFileData::AnnoyItemVector* Arena::CreateMaybeMessage<::RSP_AnnoyFileData::AnnoyItemVector>(Arena*);
template<> ::RSP_AnnoyFileData::AnnoyKeynameVector* Arena::CreateMaybeMessage<::RSP_AnnoyFileData::AnnoyKeynameVector>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace RSP_AnnoyFileData {

// ===================================================================

class AnnoyItemVector PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RSP_AnnoyFileData.AnnoyItemVector) */ {
 public:
  inline AnnoyItemVector() : AnnoyItemVector(nullptr) {}
  virtual ~AnnoyItemVector();

  AnnoyItemVector(const AnnoyItemVector& from);
  AnnoyItemVector(AnnoyItemVector&& from) noexcept
    : AnnoyItemVector() {
    *this = ::std::move(from);
  }

  inline AnnoyItemVector& operator=(const AnnoyItemVector& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnnoyItemVector& operator=(AnnoyItemVector&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnnoyItemVector& default_instance();

  static inline const AnnoyItemVector* internal_default_instance() {
    return reinterpret_cast<const AnnoyItemVector*>(
               &_AnnoyItemVector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AnnoyItemVector& a, AnnoyItemVector& b) {
    a.Swap(&b);
  }
  inline void Swap(AnnoyItemVector* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnnoyItemVector* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnnoyItemVector* New() const final {
    return CreateMaybeMessage<AnnoyItemVector>(nullptr);
  }

  AnnoyItemVector* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnnoyItemVector>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnnoyItemVector& from);
  void MergeFrom(const AnnoyItemVector& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnnoyItemVector* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RSP_AnnoyFileData.AnnoyItemVector";
  }
  protected:
  explicit AnnoyItemVector(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_other_2fannoy_5ffile_5fdata_2eproto);
    return ::descriptor_table_other_2fannoy_5ffile_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVectorDataFieldNumber = 4,
    kItemIdFieldNumber = 1,
    kResTypeFieldNumber = 2,
    kItemPosFieldNumber = 3,
  };
  // repeated float vector_data = 4;
  int vector_data_size() const;
  private:
  int _internal_vector_data_size() const;
  public:
  void clear_vector_data();
  private:
  float _internal_vector_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vector_data() const;
  void _internal_add_vector_data(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vector_data();
  public:
  float vector_data(int index) const;
  void set_vector_data(int index, float value);
  void add_vector_data(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vector_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vector_data();

  // int64 item_id = 1;
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::int64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 res_type = 2;
  void clear_res_type();
  ::PROTOBUF_NAMESPACE_ID::int32 res_type() const;
  void set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_type() const;
  void _internal_set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 item_pos = 3;
  void clear_item_pos();
  ::PROTOBUF_NAMESPACE_ID::int32 item_pos() const;
  void set_item_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_pos() const;
  void _internal_set_item_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:RSP_AnnoyFileData.AnnoyItemVector)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vector_data_;
  mutable std::atomic<int> _vector_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_pos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_other_2fannoy_5ffile_5fdata_2eproto;
};
// -------------------------------------------------------------------

class AnnoyKeynameVector PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RSP_AnnoyFileData.AnnoyKeynameVector) */ {
 public:
  inline AnnoyKeynameVector() : AnnoyKeynameVector(nullptr) {}
  virtual ~AnnoyKeynameVector();

  AnnoyKeynameVector(const AnnoyKeynameVector& from);
  AnnoyKeynameVector(AnnoyKeynameVector&& from) noexcept
    : AnnoyKeynameVector() {
    *this = ::std::move(from);
  }

  inline AnnoyKeynameVector& operator=(const AnnoyKeynameVector& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnnoyKeynameVector& operator=(AnnoyKeynameVector&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnnoyKeynameVector& default_instance();

  static inline const AnnoyKeynameVector* internal_default_instance() {
    return reinterpret_cast<const AnnoyKeynameVector*>(
               &_AnnoyKeynameVector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AnnoyKeynameVector& a, AnnoyKeynameVector& b) {
    a.Swap(&b);
  }
  inline void Swap(AnnoyKeynameVector* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnnoyKeynameVector* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnnoyKeynameVector* New() const final {
    return CreateMaybeMessage<AnnoyKeynameVector>(nullptr);
  }

  AnnoyKeynameVector* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnnoyKeynameVector>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnnoyKeynameVector& from);
  void MergeFrom(const AnnoyKeynameVector& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnnoyKeynameVector* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RSP_AnnoyFileData.AnnoyKeynameVector";
  }
  protected:
  explicit AnnoyKeynameVector(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_other_2fannoy_5ffile_5fdata_2eproto);
    return ::descriptor_table_other_2fannoy_5ffile_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVectorDataFieldNumber = 2,
    kKeynameFieldNumber = 1,
  };
  // repeated float vector_data = 2;
  int vector_data_size() const;
  private:
  int _internal_vector_data_size() const;
  public:
  void clear_vector_data();
  private:
  float _internal_vector_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vector_data() const;
  void _internal_add_vector_data(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vector_data();
  public:
  float vector_data(int index) const;
  void set_vector_data(int index, float value);
  void add_vector_data(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vector_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vector_data();

  // string keyname = 1;
  void clear_keyname();
  const std::string& keyname() const;
  void set_keyname(const std::string& value);
  void set_keyname(std::string&& value);
  void set_keyname(const char* value);
  void set_keyname(const char* value, size_t size);
  std::string* mutable_keyname();
  std::string* release_keyname();
  void set_allocated_keyname(std::string* keyname);
  private:
  const std::string& _internal_keyname() const;
  void _internal_set_keyname(const std::string& value);
  std::string* _internal_mutable_keyname();
  public:

  // @@protoc_insertion_point(class_scope:RSP_AnnoyFileData.AnnoyKeynameVector)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vector_data_;
  mutable std::atomic<int> _vector_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyname_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_other_2fannoy_5ffile_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnnoyItemVector

// int64 item_id = 1;
inline void AnnoyItemVector::clear_item_id() {
  item_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AnnoyItemVector::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AnnoyItemVector::item_id() const {
  // @@protoc_insertion_point(field_get:RSP_AnnoyFileData.AnnoyItemVector.item_id)
  return _internal_item_id();
}
inline void AnnoyItemVector::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  item_id_ = value;
}
inline void AnnoyItemVector::set_item_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:RSP_AnnoyFileData.AnnoyItemVector.item_id)
}

// int32 res_type = 2;
inline void AnnoyItemVector::clear_res_type() {
  res_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AnnoyItemVector::_internal_res_type() const {
  return res_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AnnoyItemVector::res_type() const {
  // @@protoc_insertion_point(field_get:RSP_AnnoyFileData.AnnoyItemVector.res_type)
  return _internal_res_type();
}
inline void AnnoyItemVector::_internal_set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_type_ = value;
}
inline void AnnoyItemVector::set_res_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_type(value);
  // @@protoc_insertion_point(field_set:RSP_AnnoyFileData.AnnoyItemVector.res_type)
}

// int32 item_pos = 3;
inline void AnnoyItemVector::clear_item_pos() {
  item_pos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AnnoyItemVector::_internal_item_pos() const {
  return item_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AnnoyItemVector::item_pos() const {
  // @@protoc_insertion_point(field_get:RSP_AnnoyFileData.AnnoyItemVector.item_pos)
  return _internal_item_pos();
}
inline void AnnoyItemVector::_internal_set_item_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  item_pos_ = value;
}
inline void AnnoyItemVector::set_item_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_pos(value);
  // @@protoc_insertion_point(field_set:RSP_AnnoyFileData.AnnoyItemVector.item_pos)
}

// repeated float vector_data = 4;
inline int AnnoyItemVector::_internal_vector_data_size() const {
  return vector_data_.size();
}
inline int AnnoyItemVector::vector_data_size() const {
  return _internal_vector_data_size();
}
inline void AnnoyItemVector::clear_vector_data() {
  vector_data_.Clear();
}
inline float AnnoyItemVector::_internal_vector_data(int index) const {
  return vector_data_.Get(index);
}
inline float AnnoyItemVector::vector_data(int index) const {
  // @@protoc_insertion_point(field_get:RSP_AnnoyFileData.AnnoyItemVector.vector_data)
  return _internal_vector_data(index);
}
inline void AnnoyItemVector::set_vector_data(int index, float value) {
  vector_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:RSP_AnnoyFileData.AnnoyItemVector.vector_data)
}
inline void AnnoyItemVector::_internal_add_vector_data(float value) {
  vector_data_.Add(value);
}
inline void AnnoyItemVector::add_vector_data(float value) {
  _internal_add_vector_data(value);
  // @@protoc_insertion_point(field_add:RSP_AnnoyFileData.AnnoyItemVector.vector_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnnoyItemVector::_internal_vector_data() const {
  return vector_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnnoyItemVector::vector_data() const {
  // @@protoc_insertion_point(field_list:RSP_AnnoyFileData.AnnoyItemVector.vector_data)
  return _internal_vector_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnnoyItemVector::_internal_mutable_vector_data() {
  return &vector_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnnoyItemVector::mutable_vector_data() {
  // @@protoc_insertion_point(field_mutable_list:RSP_AnnoyFileData.AnnoyItemVector.vector_data)
  return _internal_mutable_vector_data();
}

// -------------------------------------------------------------------

// AnnoyKeynameVector

// string keyname = 1;
inline void AnnoyKeynameVector::clear_keyname() {
  keyname_.ClearToEmpty();
}
inline const std::string& AnnoyKeynameVector::keyname() const {
  // @@protoc_insertion_point(field_get:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
  return _internal_keyname();
}
inline void AnnoyKeynameVector::set_keyname(const std::string& value) {
  _internal_set_keyname(value);
  // @@protoc_insertion_point(field_set:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
}
inline std::string* AnnoyKeynameVector::mutable_keyname() {
  // @@protoc_insertion_point(field_mutable:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
  return _internal_mutable_keyname();
}
inline const std::string& AnnoyKeynameVector::_internal_keyname() const {
  return keyname_.Get();
}
inline void AnnoyKeynameVector::_internal_set_keyname(const std::string& value) {
  
  keyname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AnnoyKeynameVector::set_keyname(std::string&& value) {
  
  keyname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
}
inline void AnnoyKeynameVector::set_keyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
}
inline void AnnoyKeynameVector::set_keyname(const char* value,
    size_t size) {
  
  keyname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
}
inline std::string* AnnoyKeynameVector::_internal_mutable_keyname() {
  
  return keyname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AnnoyKeynameVector::release_keyname() {
  // @@protoc_insertion_point(field_release:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
  return keyname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AnnoyKeynameVector::set_allocated_keyname(std::string* keyname) {
  if (keyname != nullptr) {
    
  } else {
    
  }
  keyname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RSP_AnnoyFileData.AnnoyKeynameVector.keyname)
}

// repeated float vector_data = 2;
inline int AnnoyKeynameVector::_internal_vector_data_size() const {
  return vector_data_.size();
}
inline int AnnoyKeynameVector::vector_data_size() const {
  return _internal_vector_data_size();
}
inline void AnnoyKeynameVector::clear_vector_data() {
  vector_data_.Clear();
}
inline float AnnoyKeynameVector::_internal_vector_data(int index) const {
  return vector_data_.Get(index);
}
inline float AnnoyKeynameVector::vector_data(int index) const {
  // @@protoc_insertion_point(field_get:RSP_AnnoyFileData.AnnoyKeynameVector.vector_data)
  return _internal_vector_data(index);
}
inline void AnnoyKeynameVector::set_vector_data(int index, float value) {
  vector_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:RSP_AnnoyFileData.AnnoyKeynameVector.vector_data)
}
inline void AnnoyKeynameVector::_internal_add_vector_data(float value) {
  vector_data_.Add(value);
}
inline void AnnoyKeynameVector::add_vector_data(float value) {
  _internal_add_vector_data(value);
  // @@protoc_insertion_point(field_add:RSP_AnnoyFileData.AnnoyKeynameVector.vector_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnnoyKeynameVector::_internal_vector_data() const {
  return vector_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnnoyKeynameVector::vector_data() const {
  // @@protoc_insertion_point(field_list:RSP_AnnoyFileData.AnnoyKeynameVector.vector_data)
  return _internal_vector_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnnoyKeynameVector::_internal_mutable_vector_data() {
  return &vector_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnnoyKeynameVector::mutable_vector_data() {
  // @@protoc_insertion_point(field_mutable_list:RSP_AnnoyFileData.AnnoyKeynameVector.vector_data)
  return _internal_mutable_vector_data();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RSP_AnnoyFileData

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_other_2fannoy_5ffile_5fdata_2eproto
